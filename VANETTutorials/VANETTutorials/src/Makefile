#
# OMNeT++/OMNEST Makefile for $(LIB_PREFIX)VANETTutorials
#
# This file was generated with the command:
#  opp_makemake --make-so -f --deep -KINET_PROJ=E:/inet -KVEINS_PROJ=E:/veins -DINET_IMPORT -DVEINS_IMPORT -I$$\(INET_PROJ\)/src -I$$\(VEINS_PROJ\)/src -I. -L$$\(INET_PROJ\)/src -L$$\(VEINS_PROJ\)/src -lINET$$\(D\) -lveins$$\(D\)
#

# Name of target to be created (-o option)
TARGET = $(LIB_PREFIX)VANETTutorials$(D)$(SHARED_LIB_SUFFIX)
TARGET_DIR = .

# C++ include paths (with -I)
INCLUDE_PATH = -I$(INET_PROJ)/src -I$(VEINS_PROJ)/src -I.

# Additional object and library files to link with
EXTRA_OBJS =

# Additional libraries (-L, -l options)
LIBS = $(LDFLAG_LIBPATH)$(INET_PROJ)/src $(LDFLAG_LIBPATH)$(VEINS_PROJ)/src  -lINET$(D) -lveins$(D)

# Output directory
PROJECT_OUTPUT_DIR = ../out
PROJECTRELATIVE_PATH = src
O = $(PROJECT_OUTPUT_DIR)/$(CONFIGNAME)/$(PROJECTRELATIVE_PATH)

# Object files for local .cc, .msg and .sm files
OBJS = \
    $O/veins_inet/VeinsInetApplicationBase.o \
    $O/veins_inet/VeinsInetManager.o \
    $O/veins_inet/VeinsInetMobility.o \
    $O/veins_inet/VeinsInetSampleApplication.o \
    $O/veins_inet/vfognetsim/edgeMessages/VeinsInetAppBaseForEdge.o \
    $O/veins_inet/vfognetsim/edgeMessages/VeinsInetAppBaseForEdge1.o \
    $O/veins_inet/vfognetsim/edgeMessages/VeinsInetAppForEdge.o \
    $O/veins_inet/vfognetsim/edgeMessages/VeinsInetAppForEdge1.o \
    $O/veins_inet/vfognetsim/mecoMessages/VeinsInetAppBaseForMeco.o \
    $O/veins_inet/vfognetsim/mecoMessages/VeinsInetAppForMeco.o \
    $O/veins_inet/vfognetsim/rsuMessages/VeinsInetAppBaseForRSU.o \
    $O/veins_inet/vfognetsim/rsuMessages/VeinsInetAppBaseForRSU1.o \
    $O/veins_inet/vfognetsim/rsuMessages/VeinsInetAppForRSU.o \
    $O/veins_inet/vfognetsim/rsuMessages/VeinsInetAppForRSU1.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppBaseForVehicle.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppBaseForVehicle1.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppBaseTaskCompletionAckByVehicle.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppBaseTaskRequestByVehicle.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppBaseTaskRequestByVehicle_1.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppForVehicle.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppForVehicle1.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppTaskRequestByVehicle.o \
    $O/veins_inet/vfognetsim/vehicleMessages/VeinsInetAppTaskRequestByVehicle_1.o \
    $O/veins_inet/VeinsInetSampleMessage_m.o \
    $O/veins_inet/vfognetsim/edgeMessages/MIPSAdvertisementByEdge_m.o \
    $O/veins_inet/vfognetsim/edgeMessages/TaskAssignedToVehicle_m.o \
    $O/veins_inet/vfognetsim/edgeMessages/TaskAssignmentAckByEdge_m.o \
    $O/veins_inet/vfognetsim/edgeMessages/TaskCompletionMsgByEdge_m.o \
    $O/veins_inet/vfognetsim/mecoMessages/CollectRequests_m.o \
    $O/veins_inet/vfognetsim/mecoMessages/MIPSAdvertisementByMeco_m.o \
    $O/veins_inet/vfognetsim/mecoMessages/VehicleTaskAckByMeco_m.o \
    $O/veins_inet/vfognetsim/rsuMessages/MIPSAckByRSU_m.o \
    $O/veins_inet/vfognetsim/rsuMessages/MIPSAckByRSUMeco_m.o \
    $O/veins_inet/vfognetsim/rsuMessages/SendPacket_m.o \
    $O/veins_inet/vfognetsim/rsuMessages/TaskAssignmentByRSU_m.o \
    $O/veins_inet/vfognetsim/rsuMessages/TaskCompletionAckByRSU_m.o \
    $O/veins_inet/vfognetsim/rsuMessages/TaskCompletionMsgByRSU_m.o \
    $O/veins_inet/vfognetsim/rsuMessages/TaskRequestAckByRSU_m.o \
    $O/veins_inet/vfognetsim/vehicleMessages/TaskCompletionAckByVehicle_m.o \
    $O/veins_inet/vfognetsim/vehicleMessages/TaskRequestByVehicle_m.o

# Message files
MSGFILES = \
    veins_inet/VeinsInetSampleMessage.msg \
    veins_inet/vfognetsim/edgeMessages/MIPSAdvertisementByEdge.msg \
    veins_inet/vfognetsim/edgeMessages/TaskAssignedToVehicle.msg \
    veins_inet/vfognetsim/edgeMessages/TaskAssignmentAckByEdge.msg \
    veins_inet/vfognetsim/edgeMessages/TaskCompletionMsgByEdge.msg \
    veins_inet/vfognetsim/mecoMessages/CollectRequests.msg \
    veins_inet/vfognetsim/mecoMessages/MIPSAdvertisementByMeco.msg \
    veins_inet/vfognetsim/mecoMessages/VehicleTaskAckByMeco.msg \
    veins_inet/vfognetsim/rsuMessages/MIPSAckByRSU.msg \
    veins_inet/vfognetsim/rsuMessages/MIPSAckByRSUMeco.msg \
    veins_inet/vfognetsim/rsuMessages/SendPacket.msg \
    veins_inet/vfognetsim/rsuMessages/TaskAssignmentByRSU.msg \
    veins_inet/vfognetsim/rsuMessages/TaskCompletionAckByRSU.msg \
    veins_inet/vfognetsim/rsuMessages/TaskCompletionMsgByRSU.msg \
    veins_inet/vfognetsim/rsuMessages/TaskRequestAckByRSU.msg \
    veins_inet/vfognetsim/vehicleMessages/TaskCompletionAckByVehicle.msg \
    veins_inet/vfognetsim/vehicleMessages/TaskRequestByVehicle.msg

# SM files
SMFILES =

# Other makefile variables (-K)
INET_PROJ=E:/inet
VEINS_PROJ=E:/veins

#------------------------------------------------------------------------------

# Pull in OMNeT++ configuration (Makefile.inc)

ifneq ("$(OMNETPP_CONFIGFILE)","")
CONFIGFILE = $(OMNETPP_CONFIGFILE)
else
ifneq ("$(OMNETPP_ROOT)","")
CONFIGFILE = $(OMNETPP_ROOT)/Makefile.inc
else
CONFIGFILE = $(shell opp_configfilepath)
endif
endif

ifeq ("$(wildcard $(CONFIGFILE))","")
$(error Config file '$(CONFIGFILE)' does not exist -- add the OMNeT++ bin directory to the path so that opp_configfilepath can be found, or set the OMNETPP_CONFIGFILE variable to point to Makefile.inc)
endif

include $(CONFIGFILE)

# Simulation kernel and user interface libraries
OMNETPP_LIBS = -loppenvir$D $(KERNEL_LIBS) $(SYS_LIBS)
ifneq ($(TOOLCHAIN_NAME),clangc2)
LIBS += -Wl,-rpath,$(abspath $(INET_PROJ)/src) -Wl,-rpath,$(abspath $(VEINS_PROJ)/src)
endif

COPTS = $(CFLAGS) $(IMPORT_DEFINES) -DINET_IMPORT -DVEINS_IMPORT $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
MSGCOPTS = $(INCLUDE_PATH)
SMCOPTS =

# we want to recompile everything if COPTS changes,
# so we store COPTS into $COPTS_FILE and have object
# files depend on it (except when "make depend" was called)
COPTS_FILE = $O/.last-copts
ifneq ("$(COPTS)","$(shell cat $(COPTS_FILE) 2>/dev/null || echo '')")
$(shell $(MKPATH) "$O" && echo "$(COPTS)" >$(COPTS_FILE))
endif

#------------------------------------------------------------------------------
# User-supplied makefile fragment(s)
# >>>
# inserted from file 'makefrag':
#
# Use the new message compiler introduced in OMNeT++ 5.3
#
MSGC:=$(MSGC) --msg6

ifeq ($(PLATFORM),win32.x86_64)
  #
  # on windows we have to link with the ws2_32 (winsock2) library as it is no longer added
  # to the omnetpp system libraries by default (as of OMNeT++ 5.1)
  #
  LIBS += -lws2_32
  DEFINES += -DINET_EXPORT
  ENABLE_AUTO_IMPORT=-Wl,--enable-auto-import
  LDFLAGS := $(filter-out $(ENABLE_AUTO_IMPORT), $(LDFLAGS))

endif

# <<<
#------------------------------------------------------------------------------

# Main target
all: $(TARGET_DIR)/$(TARGET)

$(TARGET_DIR)/% :: $O/%
	@mkdir -p $(TARGET_DIR)
	$(Q)$(LN) $< $@
ifeq ($(TOOLCHAIN_NAME),clangc2)
	$(Q)-$(LN) $(<:%.dll=%.lib) $(@:%.dll=%.lib)
endif

$O/$(TARGET): $(OBJS)  $(wildcard $(EXTRA_OBJS)) Makefile $(CONFIGFILE)
	@$(MKPATH) $O
	@echo Creating shared library: $@
	$(Q)$(SHLIB_LD) -o $O/$(TARGET) $(OBJS) $(EXTRA_OBJS) $(AS_NEEDED_OFF) $(WHOLE_ARCHIVE_ON) $(LIBS) $(WHOLE_ARCHIVE_OFF) $(OMNETPP_LIBS) $(LDFLAGS)
	$(Q)$(SHLIB_POSTPROCESS) $O/$(TARGET)

.PHONY: all clean cleanall depend msgheaders smheaders

.SUFFIXES: .cc

$O/%.o: %.cc $(COPTS_FILE) | msgheaders smheaders
	@$(MKPATH) $(dir $@)
	$(qecho) "$<"
	$(Q)$(CXX) -c $(CXXFLAGS) $(COPTS) -o $@ $<

%_m.cc %_m.h: %.msg
	$(qecho) MSGC: $<
	$(Q)$(MSGC) -s _m.cc -MD -MP -MF $O/$(basename $<)_m.h.d $(MSGCOPTS) $?

%_sm.cc %_sm.h: %.sm
	$(qecho) SMC: $<
	$(Q)$(SMC) -c++ -suffix cc $(SMCOPTS) $?

msgheaders: $(MSGFILES:.msg=_m.h)

smheaders: $(SMFILES:.sm=_sm.h)

clean:
	$(qecho) Cleaning $(TARGET)
	$(Q)-rm -rf $O
	$(Q)-rm -f $(TARGET_DIR)/$(TARGET)
	$(Q)-rm -f $(TARGET_DIR)/$(TARGET:%.dll=%.lib)
	$(Q)-rm -f $(call opp_rwildcard, . , *_m.cc *_m.h *_sm.cc *_sm.h)

cleanall:
	$(Q)$(MAKE) -s clean MODE=release
	$(Q)$(MAKE) -s clean MODE=debug
	$(Q)-rm -rf $(PROJECT_OUTPUT_DIR)

# include all dependencies
-include $(OBJS:%=%.d) $(MSGFILES:%.msg=$O/%_m.h.d)
