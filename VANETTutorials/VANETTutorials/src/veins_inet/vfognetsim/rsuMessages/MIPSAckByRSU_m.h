//
// Generated file, do not edit! Created by nedtool 5.6 from veins_inet/vfognetsim/rsuMessages/MIPSAckByRSU.msg.
//

#ifndef __MIPSACKBYRSU_M_H
#define __MIPSACKBYRSU_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class MIPSAckByRSU;
#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

/**
 * Class generated from <tt>veins_inet/vfognetsim/rsuMessages/MIPSAckByRSU.msg:26</tt> by nedtool.
 * <pre>
 * //
 * // Example message definition
 * //
 * class MIPSAckByRSU extends inet::FieldsChunk
 * {
 *     int rsuID;
 *     int edgeID;
 *     int rm_MIPS;
 * }
 * </pre>
 */
class MIPSAckByRSU : public ::inet::FieldsChunk
{
  protected:
    int rsuID = 0;
    int edgeID = 0;
    int rm_MIPS = 0;

  private:
    void copy(const MIPSAckByRSU& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MIPSAckByRSU&);

  public:
    MIPSAckByRSU();
    MIPSAckByRSU(const MIPSAckByRSU& other);
    virtual ~MIPSAckByRSU();
    MIPSAckByRSU& operator=(const MIPSAckByRSU& other);
    virtual MIPSAckByRSU *dup() const override {return new MIPSAckByRSU(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getRsuID() const;
    virtual void setRsuID(int rsuID);
    virtual int getEdgeID() const;
    virtual void setEdgeID(int edgeID);
    virtual int getRm_MIPS() const;
    virtual void setRm_MIPS(int rm_MIPS);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MIPSAckByRSU& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MIPSAckByRSU& obj) {obj.parsimUnpack(b);}

#endif // ifndef __MIPSACKBYRSU_M_H

