[General]
network = Scenario
sim-time-limit = 200s
debug-on-errors = true
cmdenv-express-mode = true
image-path = ../../../../images
record-eventlog=true

# UDPBasicApp
*.node[*].numApps = 1
*.node[*].app[0].typename = "vanettutorials.veins_inet.vfognetsim.vehicleMessages.VeinsInetAppTaskRequestByVehicle"
#*.node[*].app[0].typename = "vanettutorials.veins_inet.VeinsInetSampleApplication"
*.node[*].app[0].interface = "wlan0"

# Ieee80211Interface
*.node[*].wlan[0].opMode = "a"
*.node[*].wlan[0].radio.bandName = "5.9 GHz"
*.node[*].wlan[0].radio.channelNumber = 3
*.node[*].wlan[0].radio.transmitter.power = 20mW
*.node[*].wlan[0].radio.bandwidth = 10 MHz

# HostAutoConfigurator

*.node[*].ifConfig.interfaces = "wlan0"
*.node[*].ifConfig.mcastGroups = "224.0.0.1"
#*.node[*].ipv4.configurator.interfaces = "wlan0"
#*.node[*].ipv4.configurator.mcastGroups = "224.0.0.1"

# VeinsInetMobility
*.node[*].mobility.typename = "VeinsInetMobility"

# VeinsInetManager
*.manager.updateInterval = 0.1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("erlangen.launchd.xml")
*.manager.moduleType = "vanettutorials.veins_inet.VeinsInetCar"

**.vector-recording = true


**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 3000m
**.constraintAreaMaxY = 3000m
**.constraintAreaMaxZ = 0m

**.mobility.initFromDisplayString = true
**.host*.mobilityType = "StationaryMobility"
**.host*.mobility.cx = 10m
**.host*.mobility.cy = 10m
**.host*.mobility.r = 50m
**.host*.mobility.speed = 150mps
**.host*.mobility.startAngle = 360deg

# mobility
#**.host*.mobilityType = "MassMobility"
#**.host*.mobility.initFromDisplayString = false
#**.host*.mobility.changeInterval = truncnormal(2s, 0.5s)
#**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
#**.host*.mobility.speed = truncnormal(20mps, 8mps)
#**.host*.mobility.updateInterval = 100ms

# UdpBasicApp / UdpSink
**.host1.numApps = 1
**.host1.app[0].typename = "RSUApp"
**.host1.app[0].destAddresses = "host2"
**.host1.app[0].localPort = 9001
**.host1.app[0].destPort = 9001
**.host1.app[0].messageLength = 100B
**.host1.app[0].startTime = uniform(10s, 30s)
**.host1.app[0].sendInterval = uniform(10s, 30s)
# UdpBasicApp / UdpSink
**.host2.numApps = 1
**.host2.app[0].typename = "EdgeApp"
**.host2.app[0].destAddresses = "host1"
**.host2.app[0].localPort = 9001
**.host2.app[0].destPort = 9001
**.host2.app[0].messageLength = 100B
**.host2.app[0].startTime = uniform(10s, 30s)
**.host2.app[0].sendInterval = uniform(10s, 30s)

# nic settings
#**.wlan[*].typename = "IdealWirelessNic"
**.host*.wlan[*].bitrate = 2Mbps
**.host*.wlan[*].mac.address = "auto"
**.host*.wlan[*].mac.headerLength = 20B
**.host*.wlan[*].radioType = "IdealRadio"
**.host*.wlan[*].radio.transmitter.bitrate = 2Mbps
**.host*.wlan[*].radio.transmitter.headerBitLength = 100b
**.host*.wlan[*].radio.transmitter.maxInterferenceRange = 0m
**.host*.wlan[*].radio.transmitter.maxDetectionRange = 0m
**.host*.wlan[*].radio.receiver.ignoreInterference = true
**.host*.wlan[*].radio.transmitter.maxCommunicationRange = 200m

*.host*.forwarding = true

*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
